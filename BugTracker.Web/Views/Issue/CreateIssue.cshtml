@using BugTracker.Web.ViewModels.Issue
@model CreateIssueViewModel

@{
  ViewBag.Title = "Create new issue";
}

<div class="container-fluid">
  <div class="py-3">
    <h6 class="m-0">@ViewBag.Title</h6>
  </div>
  <div class="card shadow mb-4">
    <div class="card-body">
      <form asp-action="CreateIssue" asp-controller="Issue" method="post" enctype="multipart/form-data">
        <div class="table-responsive mb-3">
          <table class="table table-bordered">
            <thead>
              <tr>
                <td>
                  <div class="mb-3">
                    @Html.LabelFor(m => m.AssignedToId)
                    @Html.DropDownListFor(
                           m => m.AssignedToId,
                           new SelectList(Model.Users, "Id", "UserName", Model.AssignedToId),
                           "- Select assignee -",
                           new { @class = "form-control" }
                           )
                    <span class="text-danger">@Html.ValidationMessageFor(m => m.AssignedToId)</span>
                  </div>
                  <div class="mb-3">
                    @Html.LabelFor(m => m.Title)
                    @Html.TextBoxFor(
                           m => m.Title,
                           new { @class = "form-control", placeholder = "Type issue name..." }
                           )
                    <span class="text-danger">@Html.ValidationMessageFor(m => m.Title)</span>
                  </div>
                  <div class="mb-3">
                    @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                    @Html.HiddenFor(m => m.Description, new { id = "Description" })
                    <div id="quillEditor" class="form-control" style="height:200px;">
                      @Html.Raw(Model.Description)
                    </div>
                    @Html.ValidationMessageFor(
                           m => m.Description,
                           "",
                           new { @class = "invalid-feedback d-block" }
                           )
                  </div>
                  <div class="mb-3">
                    @Html.LabelFor(m => m.PriorityId)
                    @Html.DropDownListFor(
                           m => m.PriorityId,
                           new SelectList(Model.Priorities, "Id", "Name", Model.PriorityId),
                           "- Select a priority -",
                           new { @class = "form-control" }
                           )
                    <span class="text-danger">@Html.ValidationMessageFor(m => m.PriorityId)</span>
                  </div>
                </td>
              </tr>
            </thead>
          </table>
        </div>
        <button type="submit" class="btn btn-success">Create issue</button>
        <a asp-action="Index" asp-controller="Issue" class="btn btn-secondary ms-2">Back</a>
      </form>
    </div>
  </div>
</div>

@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }

  <script>
    var quill = new Quill('#quillEditor', {
      theme:      'snow',
      placeholder:'Type issue description…'
    });

    var descInput = document.querySelector('input[name="Description"]');

    descInput.value = quill.root.innerHTML;

    quill.on('text-change', function() {
      descInput.value = quill.root.innerHTML;
    });
  </script>
}